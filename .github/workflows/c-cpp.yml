name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  cpplint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
    - run: pip install cpplint
    - run: cpplint --repository=. --verbose=2 --recursive .
  
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: uraimo/run-on-arch-action@v2.6.0
      name: Install dependencies
      id: install-dep
      with:
        arch: armv7
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        dockerRunArgs: |
          --volume "${PWD}:/huron"
        shell: /bin/bash
        install: |
          apt-get update
          apt-get install -y wget gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libeigen3-dev build-essential libssl-dev

          wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.27.8/cmake-3.27.8.tar.gz
          tar xf cmake-3.27.8.tar.gz

          cd cmake-3.27.8
          ./bootstrap
          make
          make install 
          cmake --version
        run: |
          cd /huron
          cd third_party/libsockcanpp
          cmake -DCMAKE_TOOLCHAIN_FILE=../../tools/armhf-toolchain.cmake -DBUILD_SHARED_LIBS=ON -Bbuild
          cmake --build build --parallel --target install
          cd -

          cd third_party/serial
          cmake -DCMAKE_TOOLCHAIN_FILE=../../tools/armhf-toolchain.cmake -DBUILD_SHARED_LIBS=ON -Bbuild
          sudo cmake --build build --parallel --target install
          cd -

          export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib
          cmake -DBUILD_TYPE=armv7l -Bbuild
          cmake --build build --parallel
          cd build && ctest
          make install

  build_ros2:
    runs-on: ubuntu-22.04
    container:
      image: amd64/ros:humble
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libeigen3-dev
      - name: Build and install libsockcanpp
        run: |
          cd third_party/libsockcanpp
          cmake --toolchain ../../tools/x86_64-toolchain.cmake -DBUILD_SHARED_LIBS=ON -Bbuild
          sudo cmake --build build --parallel --target install
          cd -
      - name: Build and install serial
        run: |
          cd third_party/serial
          cmake --toolchain ../../tools/x86_64-toolchain.cmake -DBUILD_SHARED_LIBS=ON -Bbuild
          sudo cmake --build build --parallel --target install
          cd -
      - name: Build, test, and install huron
        run: |
          export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:$LD_LIBRARY_PATH
          cmake -DBUILD_TYPE=x86_64 -Bbuild
          cmake --build build --parallel
          cd build
          ctest
          sudo make install
          cd -
      - name: build and test ROS 2
        run: |
          cd ros2/
          . /opt/ros/humble/setup.sh
          colcon build
