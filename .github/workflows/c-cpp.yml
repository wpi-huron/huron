name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  cpplint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
    - run: pip install cpplint
    - run: cpplint --repository=. --verbose=2 --recursive .
  
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: uraimo/run-on-arch-action@v2.6.0
      name: Install dependencies
      id: install-dep
      with:
        arch: armv7
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        dockerRunArgs: |
          --volume "${PWD}:/huron"
        shell: /bin/bash
        install: |
          apt-get update
          apt-get install -y python3 python3-pip wget gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libeigen3-dev build-essential libssl-dev ca-certificates gpg cmake git bzip2 libbz2-dev libboost-all-dev libassimp-dev

          cmake --version

          cd ~
          git clone --recurse-submodules https://github.com/humanoid-path-planner/hpp-fcl.git
          cd hpp-fcl
          mkdir build
          cd build
          cmake ..
          make
          make install

          cd ~
          git clone https://github.com/ros/urdfdom.git
          cd urdfdom
          mkdir -p build
          cd build
          cmake ../ -DCMAKE_INSTALL_PREFIX=/opt/ros/hydro
          make
          make install

          cd ~
          git clone https://github.com/coin-or/CppAD.git cppad.git
          cd CppAD
          mkdir build
          cd build
          cmake ..
          make check
          make install

          pip install casadi

          cd ~
          git clone --recursive https://github.com/stack-of-tasks/pinocchio
          cd pinocchio
          git checkout master
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_PYTHON_INTERFACE=OFF -DBUILD_WITH_COLLISION_SUPPORT=ON -DBUILD_WITH_AUTODIFF_SUPPORT=ON BUILD_WITH_CASADI_SUPPORT=ON
          make -j4
          make install

        run: |
          export PATH=/opt/openrobots/bin:$PATH
          export PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH
          export LD_LIBRARY_PATH=/opt/openrobots/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=/opt/openrobots/lib/python3.8/site-packages:$PYTHONPATH
          export CMAKE_PREFIX_PATH=/opt/openrobots:$CMAKE_PREFIX_PATH

          cd /huron
          cd third_party/libsockcanpp
          cmake -DCMAKE_TOOLCHAIN_FILE=../../tools/armhf-toolchain.cmake -DBUILD_SHARED_LIBS=ON -Bbuild
          cmake --build build --parallel --target install

          cd -
          export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib
          cmake -DBUILD_TYPE=armv7l -Bbuild
          cmake --build build --parallel
          cd build && ctest
          make install

  build_ros2:
    runs-on: ubuntu-22.04
    container:
      image: amd64/ros:humble
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libeigen3-dev
      - name: Build and install pinocchio
        run: |
          sudo apt install -qqy lsb-release curl
          sudo mkdir -p /etc/apt/keyrings
          curl http://robotpkg.openrobots.org/packages/debian/robotpkg.asc | sudo tee /etc/apt/keyrings/robotpkg.asc
          echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/robotpkg.asc] http://robotpkg.openrobots.org/packages/debian/pub $(lsb_release -cs) robotpkg" | sudo tee /etc/apt/sources.list.d/robotpkg.list
          sudo apt update
          sudo apt install -qqy robotpkg-py3*-pinocchio
      - name: Configure pinocchio
        run: |
          export PATH=/opt/openrobots/bin:$PATH
          export PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH
          export LD_LIBRARY_PATH=/opt/openrobots/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=/opt/openrobots/lib/python3.10/site-packages:$PYTHONPATH
          export CMAKE_PREFIX_PATH=/opt/openrobots:$CMAKE_PREFIX_PATH
      - name: Build and install libsockcanpp
        run: |
          cd third_party/libsockcanpp
          cmake --toolchain ../../tools/x86_64-toolchain.cmake -DBUILD_SHARED_LIBS=ON -Bbuild
          sudo cmake --build build --parallel --target install
          cd -
      - name: Build, test, and install huron
        run: |
          export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:$LD_LIBRARY_PATH
          cmake -DBUILD_TYPE=x86_64 -Bbuild
          cmake --build build --parallel
          cd build
          ctest
          sudo make install
          cd -
      - name: build and test ROS 2
        run: |
          cd ros2/
          . /opt/ros/humble/setup.sh
          colcon build
